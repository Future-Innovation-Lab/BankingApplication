<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:Class="BankingAppMobile.Views.Controls.SignInControl">
    <StackLayout>
        <StackLayout
            Margin="20, 0, 20, 0"
            Spacing="5">
            <Label
                Text="Email"
                Style="{StaticResource Body1_MulishSemiBold}"></Label>
            <Frame
                x:Name="EmailFrame"
                Style="{StaticResource Base_FrameEntry}">
                <Entry
                    Placeholder="Enter your email"
                    Text="{Binding Email.Value}"
                    Style="{StaticResource Base_Entry}">
                    <Entry.Behaviors>
                        <xct:UserStoppedTypingBehavior
							Command="{Binding ValidateCommand}"
							CommandParameter="email"
                            StoppedTypingTimeThreshold="50"
                            ShouldDismissKeyboardAutomatically="False"/>
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding Email.IsValid}"
							Value="False">
                            <Setter TargetName="EmailFrame" Property="Frame.BorderColor" Value="{StaticResource FailColor}" />
                            <Setter TargetName="LoginButton" Property="Button.IsEnabled" Value="False" />
                        </DataTrigger>
                    </Entry.Triggers>
                    <Entry.Effects>
                        <xct:RemoveBorderEffect></xct:RemoveBorderEffect>
                    </Entry.Effects>
                </Entry>
            </Frame>
            <Label
                IsVisible="{Binding Email.IsValid, Converter={xct:InvertedBoolConverter}}"
				Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
				TextColor="{StaticResource FailColor}" />
        </StackLayout>
        <StackLayout
            Margin="20, 0"
            Spacing="5">
            <Label
                Text="Pin"
                Style="{StaticResource Body1_MulishSemiBold}"></Label>
            <Frame
                x:Name="PinFrame"
                Style="{StaticResource Base_FrameEntry}">
                <Entry
                    IsPassword="True"
                    Keyboard="Numeric"
                    Placeholder="Enter your pin"
                    ReturnCommand="{Binding LoginCommand}"
                    Text="{Binding Pin.Value}"
                    Style="{StaticResource Base_Entry}">
                    <Entry.Behaviors>
                        <xct:UserStoppedTypingBehavior
							Command="{Binding ValidateCommand}"
							CommandParameter="pin"
                            StoppedTypingTimeThreshold="50"
                            ShouldDismissKeyboardAutomatically="False"/>
                    </Entry.Behaviors>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding Pin.IsValid}"
							Value="False">
                            <Setter TargetName="PinFrame" Property="Frame.BorderColor" Value="{StaticResource FailColor}" />
                            <Setter TargetName="LoginButton" Property="Button.IsEnabled" Value="False" />
                        </DataTrigger>
                    </Entry.Triggers>
                    <Entry.Effects>
                        <xct:RemoveBorderEffect></xct:RemoveBorderEffect>
                    </Entry.Effects>
                </Entry>
            </Frame>
            <Label
                IsVisible="{Binding Pin.IsValid, Converter={xct:InvertedBoolConverter}}"
				Text="{Binding Pin.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
				TextColor="{StaticResource FailColor}" />
        </StackLayout>
        <Label
            Text="Forgot pin?"
            Style="{StaticResource Base_Link}"
            Margin="20, 10">
            <Label.GestureRecognizers>
                <TapGestureRecognizer Command="{Binding ResetCommand}"></TapGestureRecognizer>
            </Label.GestureRecognizers>
        </Label>
        <Button
            x:Name="LoginButton"
            IsEnabled="False"
            Command="{Binding LoginCommand}"
            Margin="20, 0, 20, 10"
            Text="Login"
            Style="{StaticResource Base_Button}"></Button>
    </StackLayout>
</ContentView>