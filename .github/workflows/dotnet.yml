name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  AZURE_WEBAPP_NAME: futureinnovbankingapp
  AZURE_WEBAPP_WORKING_PATH: './BankingAppSln/BankingAppWebApi'     
  AZURE_WEBAPP_PACKAGE_PATH: '.' 
  AZURE_RESOURCEGROUP_NAME: futureinnovbankingjhbrg 
  SQLSERVER_NAME: ${{ secrets.SQL_SERVERNAME  }}                        
  DATABASE_NAME: ${{ secrets.SQL_DBNAME  }}                  
  SQLADMIN_LOGIN: ${{ secrets.SQLADMIN_LOGIN  }}                
  SQLADMIN_PASS: ${{ secrets.SQLADMIN_PASS  }}                

jobs:
  build:
    defaults:
      run:   
        working-directory: '${{ env.AZURE_WEBAPP_WORKING_PATH }}'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: |
          dotnet build --configuration Release
          dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/bankingapp' 
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} 
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/bankingapp'
          slot-name: staging  
    - name: Login for az cli commands 
      uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: create db connection string
      run: |
          CONN_STR=$(az sql db show-connection-string --client ado.net --server ${{ env.SQLSERVER_NAME }} --name ${{ env.DATABASE_NAME }} -o tsv)
          CONN_STR=$(echo $CONN_STR | sed "s/<username>/${{ env.SQLADMIN_LOGIN }}/g")
          CONN_STR=$(echo $CONN_STR | sed "s/<password>/${{ env.SQLADMIN_PASS }}/g")
          echo "SQL_DB_CONN_STR=$CONN_STR" >> $GITHUB_ENV
    - name: Update Database
      run: |
          dotnet tool install --global dotnet-ef
          dotnet ef database update
      env:
          ConnectionStrings__BankingConnectionString: ${{ env.SQL_DB_CONN_STR }}        
#    - name: Swap to production slot
#      run: |
#          az webapp deployment slot swap --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --name ${{ env.AZURE_WEBAPP_NAME }} --slot staging --target-slot production
#          echo "Swap finished. App Service Application URL: https://$(az webapp show --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --name ${{ env.AZURE_WEBAPP_NAME }} --query hostNames[0] -o tsv)"
     
